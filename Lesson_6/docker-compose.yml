services:
  app:
    build: ./app/
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    depends_on:
      - db
    links:
      - db

  web-proxy:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
      - db

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./rabbitmq/mount:/var/lib/rabbitmq
    env_file:
      - ./rabbitmq/.env

    restart: on-failure

  db:
    image: postgres:16-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=sa


  worker:
    build: ./app/
    image: worker
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    restart: always
    volumes:
      - ./app:/app
    working_dir: /app
    env_file:
      - ./app/.env

    command: python -u worker.py
    depends_on:
      - rabbitmq

  webui:
    build: ./webview/
    image: webview
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
    volumes:
      - ./webview:/webview
    ports:
      - 8501:8501
    working_dir: /webview
    env_file:
      - ./webview/.env

    depends_on:
      - app
